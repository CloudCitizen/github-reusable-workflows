on:
  workflow_call:
    inputs:
      file_path:
        description: "file_path"
        required: false
        type: "string"
        default: "."
      docker_image:
        description: 'docker_image'
        required: false
        type: 'string'
        default: 'ghcr.io/cloudcitizen/polaris-container-images/build-terragrunt:0.0.2'
      readonly_role:
        description: "Role to assume in AWS for read-only access"
        required: false
        type: "string"
        default: "github_readonly"
      readwrite_role:
        description: "Role to assume in AWS for read-write access"
        required: false
        type: "string"
        default: "github_readwrite"
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
      TF_VAR_OKTA_API_TOKEN:
        required: false
      TF_VAR_GITHUB_TOKEN:
        required: false

env:
  TF_VAR_okta_api_token:         ${{ secrets.TF_VAR_OKTA_API_TOKEN }}
  AWS_REGION:                    ${{ secrets.AWS_REGION }}
  TF_VAR_is_terraform_plan:      "true"

jobs:
  plan:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.docker_image }}
    permissions:
      contents: read
      id-token: write
      packages: read
      pull-requests: write
    steps:
      - name: Configure AWS credentials for main branch
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ inputs.readwrite_role }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Terragrunt init
        id: init
        run: cd ${{ inputs.file_path }} && terragrunt init --terragrunt-non-interactive
      - name: Cache terraform builds
        uses: actions/cache@v3
        with:
          path: |
            ${{ inputs.file_path }}/**/builds/
          key: ${{ runner.os }}-build-v2-${{ inputs.file_path }}-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: ${{ runner.os }}-build-v2-${{ inputs.file_path }}-
      - name: Pre API-Helpers
        run: |
          cd ${{ inputs.file_path }}
          if [ -e "api_helpers/pre-api-helpers-plan.sh" ]; then
            chmod +x api_helpers/pre-api-helpers-plan.sh
            ./api_helpers/pre-api-helpers-plan.sh
          fi
      - name: Terragrunt apply
        id: apply
        run: cd ${{ inputs.file_path }} && terragrunt apply --auto-approve
      - name: Post API-Helpers
        run: |
          cd ${{ inputs.file_path }}
          if [ -e "api_helpers/post-api-helpers-plan.sh" ]; then
            chmod +x api_helpers/post-api-helpers-plan.sh
            ./api_helpers/post-api-helpers-plan.sh
          fi
